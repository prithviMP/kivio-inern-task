{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pooja\\\\Razorpay\\\\Frontend\\\\src\\\\components\\\\Donate.js\";\nimport React from 'react';\nimport './Donate.css';\n// const Razorpay = require('razorpay');\n// const axios = require('axios');\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction loadScript(src) {\n  return new Promise(resolve => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n}\n// async function handleDonateClick(){\n//     // <script src=\"https://checkout.razorpay.com/v1/checkout.js\"></script>\n//     // const paymentLink = \"https://checkout.razorpay.com/v1/checkout.js\";\n//     // window.location.href = paymentLink;\n//         // const buyButton = document.getElementById('buy-now-btn');\n//     const BACKEND = \"http:\\\\127.0.0.1:5000\\\\\";\n//     const sum = 100;\n\n//     const response = await fetch(BACKEND + '/order', {\n\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n\n//         ,\n//         body: JSON.stringify({\n\n//             amount: sum,\n//             user: {\n//                 \"firstName\": \"Abcd\",\n//                 \"lastName\": \"efg\",\n//                 \"email\": \"lalallala@gmail.com\",\n//                 \"phone\": \"6262174462\"\n//             }\n//         })\n//     });\n\n//     const responseJson = await response.json();\n\n//     const {\n//         order\n//     }\n\n//         = responseJson;\n\n//     const razorPayOptions = {\n\n//         key: 'apna key likhhh',\n//         amount: sum,\n//         currency: 'INR',\n//         name: `stuv`,\n//         description: `abcd`,\n//         order_id: order.id,\n//         handler: async function (response) {\n//             // handler function when payment is successfull\n//             const razorpayPaymentId = response['razorpay_payment_id'];\n//             const razorpayOrderId = response['razorpay_order_id'];\n//             const razorpaySignature = response['razorpay_signature'];\n\n//             const lead = await fetch(BACKEND + \"/lead\", {\n\n//                 method: 'POST',\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 }\n\n//                 ,\n//                 body: JSON.stringify({\n//                     \"order\": order,\n//                     \"razorpayPaymentResponse\": response\n//                 })\n//             })\n//         }\n\n//         ,\n//     };\n\n//     const razorpayInstance = new Razorpay(razorPayOptions);\n//     razorpayInstance.open();\n//   };\n\nasync function displayRazorpay() {\n  const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n  if (!res) {\n    alert(\"Razorpay SDK failed to load. Are you online?\");\n    return;\n  }\n\n  // creating a new order\n  const result = await axios.post(\"http://localhost:3000/payment/orders\");\n  if (!result) {\n    alert(\"Server error. Are you online?\");\n    return;\n  }\n\n  // Getting the order details back\n  const {\n    amount,\n    id: order_id,\n    currency\n  } = result.data;\n  const options = {\n    key: \"rzp_test_r6FiJfddJh76SI\",\n    // Enter the Key ID generated from the Dashboard\n    amount: amount.toString(),\n    currency: currency,\n    name: \"Soumya Corp.\",\n    description: \"Test Transaction\",\n    order_id: order_id,\n    handler: async function (response) {\n      const data = {\n        orderCreationId: order_id,\n        razorpayPaymentId: response.razorpay_payment_id,\n        razorpayOrderId: response.razorpay_order_id,\n        razorpaySignature: response.razorpay_signature\n      };\n      const result = await axios.post(\"http://localhost:3000/payment/success\", data);\n      alert(result.data.msg);\n    },\n    prefill: {\n      name: \"Soumya Dey\",\n      email: \"SoumyaDey@example.com\",\n      contact: \"9999999999\"\n    },\n    notes: {\n      address: \"Soumya Dey Corporate Office\"\n    },\n    theme: {\n      color: \"#61dafb\"\n    }\n  };\n  const paymentObject = new window.Razorpay(options);\n  paymentObject.open();\n}\nconst Donate = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"donate-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Support Our Cause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your generous donation helps us continue our mission and make a difference in the community.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: displayRazorpay,\n      children: \"Donate Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_c = Donate;\nexport default Donate;\nvar _c;\n$RefreshReg$(_c, \"Donate\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","displayRazorpay","res","alert","result","post","amount","id","order_id","currency","data","options","key","toString","name","description","handler","response","orderCreationId","razorpayPaymentId","razorpay_payment_id","razorpayOrderId","razorpay_order_id","razorpaySignature","razorpay_signature","msg","prefill","email","contact","notes","address","theme","color","paymentObject","window","Razorpay","open","Donate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pooja/Razorpay/Frontend/src/components/Donate.js"],"sourcesContent":["import React from 'react';\nimport './Donate.css';\n// const Razorpay = require('razorpay');\n// const axios = require('axios');\nimport axios from 'axios';\n\nfunction loadScript(src) {\n    return new Promise((resolve) => {\n        const script = document.createElement(\"script\");\n        script.src = src;\n        script.onload = () => {\n            resolve(true);\n        };\n        script.onerror = () => {\n            resolve(false);\n        };\n        document.body.appendChild(script);\n    });\n}\n// async function handleDonateClick(){\n//     // <script src=\"https://checkout.razorpay.com/v1/checkout.js\"></script>\n//     // const paymentLink = \"https://checkout.razorpay.com/v1/checkout.js\";\n//     // window.location.href = paymentLink;\n//         // const buyButton = document.getElementById('buy-now-btn');\n//     const BACKEND = \"http:\\\\127.0.0.1:5000\\\\\";\n//     const sum = 100;\n\n//     const response = await fetch(BACKEND + '/order', {\n\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n\n//         ,\n//         body: JSON.stringify({\n\n//             amount: sum,\n//             user: {\n//                 \"firstName\": \"Abcd\",\n//                 \"lastName\": \"efg\",\n//                 \"email\": \"lalallala@gmail.com\",\n//                 \"phone\": \"6262174462\"\n//             }\n//         })\n//     });\n\n//     const responseJson = await response.json();\n\n//     const {\n//         order\n//     }\n\n//         = responseJson;\n\n//     const razorPayOptions = {\n\n//         key: 'apna key likhhh',\n//         amount: sum,\n//         currency: 'INR',\n//         name: `stuv`,\n//         description: `abcd`,\n//         order_id: order.id,\n//         handler: async function (response) {\n//             // handler function when payment is successfull\n//             const razorpayPaymentId = response['razorpay_payment_id'];\n//             const razorpayOrderId = response['razorpay_order_id'];\n//             const razorpaySignature = response['razorpay_signature'];\n\n//             const lead = await fetch(BACKEND + \"/lead\", {\n\n//                 method: 'POST',\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 }\n\n//                 ,\n//                 body: JSON.stringify({\n//                     \"order\": order,\n//                     \"razorpayPaymentResponse\": response\n//                 })\n//             })\n//         }\n\n//         ,\n//     };\n\n//     const razorpayInstance = new Razorpay(razorPayOptions);\n//     razorpayInstance.open();\n//   };\n\n  async function displayRazorpay() {\n    const res = await loadScript(\n        \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n\n    if (!res) {\n        alert(\"Razorpay SDK failed to load. Are you online?\");\n        return;\n    }\n\n    // creating a new order\n    const result = await axios.post(\"http://localhost:3000/payment/orders\");\n\n    if (!result) {\n        alert(\"Server error. Are you online?\");\n        return;\n    }\n\n    // Getting the order details back\n    const { amount, id: order_id, currency } = result.data;\n\n    const options = {\n        key: \"rzp_test_r6FiJfddJh76SI\", // Enter the Key ID generated from the Dashboard\n        amount: amount.toString(),\n        currency: currency,\n        name: \"Soumya Corp.\",\n        description: \"Test Transaction\",\n        order_id: order_id,\n        handler: async function (response) {\n            const data = {\n                orderCreationId: order_id,\n                razorpayPaymentId: response.razorpay_payment_id,\n                razorpayOrderId: response.razorpay_order_id,\n                razorpaySignature: response.razorpay_signature,\n            };\n\n            const result = await axios.post(\"http://localhost:3000/payment/success\", data);\n\n            alert(result.data.msg);\n        },\n        prefill: {\n            name: \"Soumya Dey\",\n            email: \"SoumyaDey@example.com\",\n            contact: \"9999999999\",\n        },\n        notes: {\n            address: \"Soumya Dey Corporate Office\",\n        },\n        theme: {\n            color: \"#61dafb\",\n        },\n    };\n\n    const paymentObject = new window.Razorpay(options);\n    paymentObject.open();\n}\n\nconst Donate = () => {\n  return (\n    <div className=\"donate-section\">\n      <h2>Support Our Cause</h2>\n      <p>Your generous donation helps us continue our mission and make a difference in the community.</p>\n      <button onClick={displayRazorpay}>Donate Now</button>\n    </div>\n  );\n};\n\nexport default Donate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}